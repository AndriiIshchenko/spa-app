services:
  db:
    image: postgres:16.0-alpine3.17
    container_name: postgres_spa
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - spa_db:$PGDATA
    networks:
      - spa_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB -h 127.0.0.1 || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  # redis:
  #   image: redis:latest
  #   env_file:
  #     - .env
  #   ports:
  #     - "6379:6379"
  
  #   redis:
  #   image: redis:latest
  #   container_name: redis_spa
  #   env_file:
  #     - .env
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data  # Persist Redis data
  #   command: ["redis-server", "--appendonly", "yes"]  # Enable AOF persistence
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "ping"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 3
  #   networks:
  #     - spa_network

  web:
    restart: always
    build: .
    container_name: backend_spa
    command: gunicorn spa.wsgi:application --bind 0.0.0.0:8000 --reload
    env_file:
      - .env
    environment:
      - LOG_LEVEL=debug
      - PYTHONPATH=/usr/src/django
      - WATCHFILES_FORCE_POLLING=true
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy

    volumes:
      - .:/usr/src/django
    networks:
      - spa_network

  django_migrator:
    build: .
    container_name: django_migrator_spa
    command: ["python", "manage.py", "migrate"]
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/usr/src/django
    env_file:
      - .env
    environment:
      - PYTHONPATH=/usr/src/django
    networks:
      - spa_network


volumes:
  spa_db:
    driver: local


networks:
  spa_network:
    driver: bridge
